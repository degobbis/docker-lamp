# Docker-compose environment variables.
# Rename this file .env and customise to your liking.
# Reference: https://docs.docker.com/compose/reference/envvars/

# Set the project name otherwise it will default to folder name of docker-compose.yml
#
COMPOSE_PROJECT_NAME="docker-lamp"

# Set your host IP here. It will be used for PHP xDebug and for the mapping
# of the TLD or extra domains defined in the configuration for BIND.
#
# As docker is installed, it will create its own network adaptor. It is a good practice to use it.
# It makes Your configuration mor flexible.
#
# You can get the IP on a terminal with this command:
#   ip a | grep -i 'docker'
#
# Then search for something like this:
#   inet 172.17.0.1/16
#
# In this case the IP should be "172.17.0.1"
#
REMOTE_HOST_IP=""


#####################################
# CONFIGURATION FOR BIND
#####################################
#
# Enable oder disable BIND support
# 1 = Start BIND
# 0 = Do not start BIND
#
USE_BIND="1"

# This is the domain suffix your projects will be made available with mass-virtual-hosting.
# It is also required for the internal DNS server to be setup.
#
# Note: Only ALPHA ([a-zA-Z]+) characters are supported.
#
# Example:
#   TLD_SUFFIX=local=$REMOTE_HOST_IP
# Makes your project available under xxxx.local
#
# Example:
#   TLD_SUFFIX="loc=$REMOTE_HOST_IP,test=192.168.0.2"
#     Makes your projects available under xxxx.loc on REMOTE_HOST_IP
#     and xxxx.test on 192.168.0.2
#
# Finaly on Your host change your primary DNS-Nameserver to the IP set in REMOTE_HOST_IP to take effect
#   Linux: Edit /etc/resolv.conf and set/change 'nameserver' to the IP set in REMOTE_HOST_IP
#   or look here for other solutions:
#     https://unix.stackexchange.com/questions/128220/how-do-i-set-my-dns-when-resolv-conf-is-being-overwritten
#
#   MacOs: https://www.macinstruct.com/node/434
#
#   Windows: https://www.windowscentral.com/how-change-your-pcs-dns-settings-windows-10
#
# If You need to resolv a domain with all subdomains, add it here and not to EXTRA_HOSTS
#
# Example:
#   TLD_SUFFIX="local=$REMOTE_HOST_IP,test=$REMOTE_HOST_IP,example.org=$REMOTE_HOST_IP"
#     Resolves example.org an all subdomains like xxx.example.org to Your projekt.
#     For these extra domains follow the instructions at 'Optional DNS configuration' for EXTRA_HOSTS
#
# IMPORTANT: No spaces allowed!
#
TLD_SUFFIX="local=$REMOTE_HOST_IP,test=$REMOTE_HOST_IP"


# Optional DNS configuration
# Allows you to add extra DNS records (above the wildcard entry)
# Useful if your host computer run other Docker services that you want to connect to or reach
# from within the local webserver network by a custom hostname.
#
# Resolve any custom defined hostname to an IP address (useable inside container and host os)
#   EXTRA_HOSTS=<hostname>=<ip>[,<hostname>=<ip>]
#
# Example:
#   EXTRA_HOSTS="my-domain.de=$REMOTE_HOST_IP,my-other-domain.de=$REMOTE_HOST_IP"
#     Resolves my-domain.de and my-other-domain.de to the IP set in REMOTE_HOST_IP
#     (You need to configure it in $APP_BASEDIR/httpd/apache24/my-domains.conf to map to a directory)
#
# IMPORTANT: No spaces allowed!
#
EXTRA_HOSTS=""


# Add comma separated DNS server from which you want to receive DNS
# You can also add DNS servers from your LAN (if any are available)
#
# Example:
#   BIND_DNS_RESOLVER=192.168.178.1
#     (Local fritz-box router)
#
# IMPORTANT: No spaces allowed!
#
BIND_DNS_RESOLVER="1.1.1.1,1.0.0.1"


#####################################
# CONFIGURATION FOR MINICA (SSL)
#####################################
#
# Add additionaly domains for which You need a ssl certificate Creates a subfolder inside
# of 'APP_BASEDIR/ca' with the first domain of each comma separated group.
#
# To add more domains to 'localdomains' first delete the folder 'APP_BASEDIR/ca/localdomains'
# and add the domains separated with a comma (without spaces) to 'SSL_LOCALDOMAINS' between quotes before recreate.
#
# Example:
#   SSL_LOCALDOMAINS="example.local,*.example.local,example.test,*.example.local"
#
#
# To add some individual domains use 'SSL_DOMAINS' and place the value between quotes.
# Domains separated with a comma (without spaces) will be grouped in one certificate named by the first one.
# Domain groups are separated by a space.
# You can combine it.
#
# Example:
#   SSL_DOMAINS="example1.org,www.example1.org example2.org,*.example2.org"
#
#     Creates a subfolder 'APP_BASEDIR/ca/example1.org' with the certificate for example1.org and www.example1.org
#     Also creates a subfolder 'APP_BASEDIR/ca/example2.org' with the certificate for example2.org including
#     the Wildcard domain *.example2.org for each subdomain
#
# If You use the 'docker-lamp start' or 'docker-lamp create-certs' commands at first time,
# 'localdomains' will be created automaticaly on the first start containig this domains:
#   localhost,
#   joomla.local,joomla.test,*.joomla.local,*.joomla.test,
#   wp.local,wp.test,*.wp.local,*.wp.test,
#   wpms.local,wpms.test,*.wpms.local,*.wpms.test
#
#
# The files 'minica-root-ca.pem' and 'minica-root-ca-key.pem' are needed for the creation of the domain certificates.
# Add 'minica-root-ca.pem' as Root CA in your Browser like this:
#
#   Firefox: https://docs.vmware.com/en/VMware-Adapter-for-SAP-Landscape-Management/2.0/Installation-and-Administration-Guide-for-VLA-Administrators/GUID-0CED691F-79D3-43A4-B90D-CD97650C13A0.html
#
#   Chrome/Chromium: https://docs.vmware.com/en/VMware-Adapter-for-SAP-Landscape-Management/2.0/Installation-and-Administration-Guide-for-VLA-Administrators/GUID-D60F08AD-6E54-4959-A272-458D08B8B038.html
#
SSL_DOMAINS=""
SSL_LOCALDOMAINS=""


#####################################
# GLOBAL CONFIGURATION SETTINGS
#####################################
#
# Set your user and group ID from your Linux host,
# it will be automatically assigned to the user and group 'virtual'
# inside the containers used for Apache and php-fpm processes.
#
# You can safely ignore this on Windows and MacOS, but don't disable it!
APP_USER_ID="1000"
APP_GROUP_ID="1000"

# Set your project folder for websites and configurations.
# If you want to outsource this, use the ./data folder as the base skeleton.
#
APP_BASEDIR="./data"

# Set the timezone globaly (UTC or Europe/Berlin ...)
#
MY_TZ="Europe/Berlin"

# Set the locales globaly (de_DE.UTF-8 or en_GB.UTF-8 ...)
#
MY_LOCALES="de_DE.UTF-8"


#####################################
# CONFIGURATION FOR PHP
#####################################
#
# Set PHP versions to use.
# Put the value in quotes and separate multiple versions by space.
#
# Example:
#   PHP_TO_USE="php56 php73 php74 php80 php81"
#
PHP_TO_USE="php74 php81 php82"


#####################################
# CONFIGURATION FOR HTTPD
#####################################
#
# Set the httpd container to use
#
HTTPD_TO_USE="apache24"

# Specify the ports to be assigned in the httpd container for the particular php version to be used.
#
# The following ports cannot be used because they are already required for other services:
#   53 = BIND
#   3306 = DATABASE
#   8000/8400 = phpmyadmin
#   1025 = mailhog
#   8025 = mailhog
#
# Also respect the ports used by the system.
#
PHP56_PORT=8056
PHP56_PORT_SSL=8456
PHP73_PORT=8073
PHP73_PORT_SSL=8473
PHP74_PORT=8074
PHP74_PORT_SSL=8474
PHP80_PORT=8080
PHP80_PORT_SSL=8480
PHP81_PORT=8081
PHP81_PORT_SSL=8481
PHP82_PORT=8082
PHP82_PORT_SSL=8482

# Set the PHP version to map for the default browser ports 80 and 443
# The PHP Version has to be set in PHP_TO_USE
#
MAP_PORT_80_443="php74"

# Set your custom port mapping which has not been assigned before.
# Put the value in quotes and separate multiple versions by space.
# First value ist the port on the host, second inside container.
#
# Example:
#   HTTPD_CUSTOM_PORTS="9050:9500 8656:8245"
#
HTTPD_CUSTOM_PORTS=""


#####################################
# CONFIGURATION FOR DATABASES
#####################################
#
# Set Database to use (mariadb104 or mariadb105 or mariadb106 or mysql57 or mysql80)
#
DATABASE_TO_USE="mariadb105"

#
# Set MySQL root password
#
DATABASE_ROOT_PASSWORD="root"

# Enable archiving of the databases, in addition to the normal saving at server shutdown.
# If enabled, by default the databases are archived in a subfolder, with the current date as name,
# in this format 'yyyy-mm-dd'.
#
# For more details about Your possibilities to configure the subfolder name,
# show the help for the command 'stop', by calling 'docker-lamp stop --help'
#
# Options:
#   0 = Off
#   1 = On
#
ARCHIVE_DATABASES="0"


#####################################
# CONFIGURATION FOR PHPMYADMIN
#####################################
#
# If set, will override the maximum execution time in seconds (default 600)
# for phpMyAdmin ($cfg['ExecTimeLimit']) and PHP max_execution_time
#
PMA_MAX_EXECUTION_TIME="600"

# If set, will override the memory limit (default 512M) for phpMyAdmin ($cfg['MemoryLimit']) and PHP memory_limit.
# Format as [0-9+](K,M,G)
#
PMA_MEMORY_LIMIT="512M"

# If set, this option will override for phpMyAdmin the upload_max_filesize (default 2048K).
# This will only change PHP upload_max_filesize and post_max_size values in the phpMyAdmin image.
# Format as [0-9+](K,M,G)
#
PMA_UPLOAD_LIMIT="512M"
