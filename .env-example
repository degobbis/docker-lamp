# Docker-compose environment variables.
# Rename this file .env and customise to your liking.
# Reference: https://docs.docker.com/compose/reference/envvars/

# Set the project name otherwise it will default to folder name of docker-compose.yml
#
COMPOSE_PROJECT_NAME=docker-lamp


# This is the domain suffix your projects will be made available
# with mass-virtual-hosting.
# It is also required for the internal DNS server to be setup.
#
# Note: Only ALPHA ([a-zA-Z]+) characters are supported.
#
# Example:
#   TLD_SUFFIX=local=127.0.0.1
# Makes your project available under xxxx.local
#
# Example:
#   TLD_SUFFIX=loc=127.0.0.1,test=192.168.0.2
#     Makes your projects available under xxxx.loc on 127.0.0.1
#     and xxxx.test on 192.168.0.2
#
# Finaly on Your host change your primary DNS-Nameserver to 127.0.0.1 to take effect
#
#   Linux: Edit /etc/resolv.conf and set/change 'nameserver' to 127.0.1.1 or look here for other solutions
#     https://unix.stackexchange.com/questions/128220/how-do-i-set-my-dns-when-resolv-conf-is-being-overwritten
#
#   MacOs: https://www.macinstruct.com/node/434
#
#   Windows: https://www.windowscentral.com/how-change-your-pcs-dns-settings-windows-10
#
# If You need to resolv a domain with all subdomains, add it here and not to EXTRA_HOSTS
#
# Example:
#   TLD_SUFFIX=local=127.0.0.1,test=127.0.0.1,example.org=127.0.0.1
#     Resolves example.or an all subdomains like xxx.example.org to Your projekt.
#     For these extra domains follow the instructions at 'Optional DNS configuration' for EXTRA_HOSTS
#
TLD_SUFFIX=local=127.0.0.1,test=127.0.0.1


# Optional DNS configuration
# Allows you to add extra DNS records (above the wildcard entry)
# Useful if your host computer run other Docker services that you want to connect to or reach
# from within the local webserver network by a custom hostname.
#
# Resolve any custom defined hostname to an IP address (useable inside container and host os)
#   EXTRA_HOSTS=<hostname>=<ip>[,<hostname>=<ip>]
#
# Example:
#   EXTRA_HOSTS=my-domain.de=127.0.0.1,my-other-domain.de=127.0.0.1
#     Resolves my-domain.de and my-other-domain.de to 127.0.0.1
#     (You need to configure it in ./data/apache24/my-domains.conf to map to a directory)
#
EXTRA_HOSTS=


# Add comma separated DNS server from which you want to receive DNS
# You can also add DNS servers from your LAN (if any are available)
#
# Example:
#   BIND_DNS_RESOLVER=192.168.178.1
#     (Local fritz-box router)
#
BIND_DNS_RESOLVER=1.1.1.1,1.0.0.1


# Add additionaly domains for which You need a ssl certificate Creates a subfolder inside
# of 'data/ca with the first domain of each comma separated group.
#
# Domains separated with a comma (without spaces) will be grouped in one certificate
# Domain groups are separated by a space.
#
# To add more domains to 'localdomains' first delete the folder 'data/ca/localdomains'
# and add the domains separated with a comma to 'SSL_LOCALDOMAINS=domain-to-add.local,...' before recreate.
#
# To add some individual domains use 'SSL_DOMAINS=domain-to-add.local ...'
#
# You can combine it
# Example:
#   SSL_DOMAINS=my-domain.de[,www.my-domain.de][ my-other-domain.de[,*.my-other-domain.de]]
#     Creates a subfolder my-domain.de with the certificate for my-domain.de and www.my-domain.de
#     Also creates a subfolder my-other-domain.de with the certificate for my-other-domain.de
#     and the Wildcard certificate *.my-other-domain.de for each subdomain
#
# If You use the 'make server-up' or 'make create-certs' commands at first time,
# 'localdomains' will be created automaticaly on the first start containig this domains:
#   localhost,
#   joomla.local,joomla.test,*.joomla.local,*.joomla.test,
#   wp.local,wp.test,*.wp.local,*.wp.test,
#   wpms.local,wpms.test,*.wpms.local,*.wpms.test
#
#
# The files 'minica-root-ca.pem' and 'minica-root-ca-key.pem' are needed for the creation of the domain certificates.
# Add 'minica-root-ca.pem' as Root CA in your Browser like this:
#
#   Firefox: https://docs.vmware.com/en/VMware-Adapter-for-SAP-Landscape-Management/2.0/Installation-and-Administration-Guide-for-VLA-Administrators/GUID-0CED691F-79D3-43A4-B90D-CD97650C13A0.html
#
#   Chrome/Chromium: https://docs.vmware.com/en/VMware-Adapter-for-SAP-Landscape-Management/2.0/Installation-and-Administration-Guide-for-VLA-Administrators/GUID-D60F08AD-6E54-4959-A272-458D08B8B038.html
#
SSL_DOMAINS=
SSL_LOCALDOMAINS=


# Set your user and group ID from your Linux host,
# it will be automatically assigned to the user and group 'virtual'
# inside the containers used for Apache and php-fpm processes.
#
# You can safely ignore this on Windows and MacOS, but don't disable it!
APP_USER_ID=1000
APP_GROUP_ID=1000


# Set MySQL root password
#
MYSQL_ROOT_PASSWD=root


# If set, will override the maximum execution time in seconds (default 600)
# for phpMyAdmin ($cfg['ExecTimeLimit']) and PHP max_execution_time
#
PMA_MAX_EXECUTION_TIME=600


# If set, will override the memory limit (default 512M) for phpMyAdmin ($cfg['MemoryLimit']) and PHP memory_limit.
# Format as [0-9+](K,M,G)
#
PMA_MEMORY_LIMIT=512M


# if set, this option will override for phpMyAdmin the upload_max_filesize (default 2048K).
# This will only change PHP upload_max_filesize and post_max_size values in the phpMyAdmin image.
# Format as [0-9+](K,M,G)
#
PMA_UPLOAD_LIMIT=512M


# Set your project folder for websites and configurations.
# If you want to outsource this, use the ./data folder as the base skeleton.
#
APP_BASEDIR=./data


# Set the http port to map the php version for the default port 80
#
MAP_POT_80=8074


# Set the https port to map the php version for the default port 443 (SSL)
#
MAP_POT_443=8474


# Set the timezone globaly (UTC or Europe/Berlin ...)
#
MY_TZ=Europe/Berlin


# Set the locales globaly (de_DE.UTF-8 or en_GB.UTF-8 ...)
#
MY_LOCALES=de_DE.UTF-8


# PHP environments type (development/production)
#
PHP_ENV=development


# To use PHP xDebug set your host IP here (192.168.0.100)
#
REMOTE_HOST_IP=
